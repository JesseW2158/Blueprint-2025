/*
  Disappointing Trumpet Alarm – Intensified Version
  -------------------------------------------------
  This sketch simulates a more disappointing and “louder” trumpet-like alarm.
  It uses an extended descending glissando and longer staccato hits with
  reduced silent gaps.

  Wiring:
    - Connect the buzzer's VCC to 5V (or the appropriate voltage)
    - Connect the buzzer's GND to Arduino GND
    - Connect the buzzer's Signal pin to digital pin 8
*/

const int buzzerPin = 8;

// Function to perform a descending glissando (smooth slide)
void descendingGlissando(int startFreq, int endFreq, int duration, int steps) {
  for (int i = 0; i <= steps; i++) {
    // Linear interpolation between start and end frequency:
    int currentFreq = startFreq + ((endFreq - startFreq) * i) / steps;
    tone(buzzerPin, currentFreq);
    delay(duration / steps);
  }
  noTone(buzzerPin);
}

// Function to play a single note (or rest if frequency is 0)
void playNote(int frequency, int duration) {
  if (frequency == 0) {
    delay(duration);
  } else {
    tone(buzzerPin, frequency, duration);
    delay(duration * 1.1);  // slightly reduced pause for a more continuous sound
    noTone(buzzerPin);
  }
}

void setup() {
  pinMode(buzzerPin, OUTPUT);
}

void loop() {
  // Repeat the alarm cycle four times for extra impact
  for (int i = 0; i < 4; i++) {
    // Part 1: Descending glissando for a deflating trumpet effect
    // Slide from 1000 Hz down to 300 Hz over 700 ms (using 30 steps)
    descendingGlissando(1000, 300, 700, 30);
    
    // Very short pause between segments
    delay(50);
    
    // Part 2: A longer, forceful staccato note to simulate a muted, disappointing trumpet hit
    playNote(500, 200);
    
    // Reduced pause between cycles for a more aggressive alarm rhythm
    delay(150);
  }
  
  // Short pause before repeating the entire alarm sequence
  delay(1000);
}
